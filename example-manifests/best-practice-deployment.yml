apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: Web
    app.kubernetes.io/managed-by: Pipeline
    app.kubernetes.io/name: BestPracticeDeployment
    app.kubernetes.io/part-of: BestPractice
    app.kubernetes.io/version: 0.0.1
  name: best-practice-service
  namespace: development
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/component: Web
    app.kubernetes.io/managed-by: Pipeline
    app.kubernetes.io/name: BestPracticeDeployment
    app.kubernetes.io/part-of: BestPractice
    app.kubernetes.io/version: 0.0.1
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: Web
    app.kubernetes.io/managed-by: Pipeline
    app.kubernetes.io/name: BestPracticeDeployment
    app.kubernetes.io/part-of: BestPractice
    app.kubernetes.io/version: 0.0.1
  name: best-practice-deployment
  namespace: development
spec:
  replicas: 8
  selector:
    matchLabels:
      app.kubernetes.io/component: Web
      app.kubernetes.io/managed-by: Pipeline
      app.kubernetes.io/name: BestPracticeDeployment
      app.kubernetes.io/part-of: BestPractice
      app.kubernetes.io/version: 0.0.1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: Web
        app.kubernetes.io/managed-by: Pipeline
        app.kubernetes.io/name: BestPracticeDeployment
        app.kubernetes.io/part-of: BestPractice
        app.kubernetes.io/version: 0.0.1
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - BestPracticeDeployment
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - image: nginx:stable
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 3
        name: container-name
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 1
          periodSeconds: 3
        resources:
          limits:
            cpu: "3"
            memory: 700Mi
          requests:
            cpu: 0.5m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz
            port: 80
          periodSeconds: 10
      securityContext:
        fsGroup: 20000
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: Web
    app.kubernetes.io/managed-by: Pipeline
    app.kubernetes.io/name: BestPracticeDeployment
    app.kubernetes.io/part-of: BestPractice
    app.kubernetes.io/version: 0.0.1
  name: best-practice-pdb
  namespace: development
spec:
  minAvailable: 4
  selector:
    matchLabels:
      app.kubernetes.io/component: Web
      app.kubernetes.io/managed-by: Pipeline
      app.kubernetes.io/name: BestPracticeDeployment
      app.kubernetes.io/part-of: BestPractice
      app.kubernetes.io/version: 0.0.1
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/component: Web
    app.kubernetes.io/managed-by: Pipeline
    app.kubernetes.io/name: BestPracticeDeployment
    app.kubernetes.io/part-of: BestPractice
    app.kubernetes.io/version: 0.0.1
  name: best-practice-ingress
  namespace: development
spec:
  rules:
  - host: example.domain.com
    http:
      paths:
      - backend:
          service:
            name: best-practice-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - example.domain.com
    secretName: domain-tls-secret
